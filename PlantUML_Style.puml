@startuml

'******************************************************************************

!ifndef FONTNAME
!define FONTNAME "Verdana"
!endif

!ifndef FONTSIZE
!define FONTSIZE 11
!endif

'-----------------------------------------------------------------------------

!ifdef STYLE_RG
!define PRIMARY 000
!define SECONDARY 333
!define ARROWCOLOR 000
!define ARROWFONTCOLOR 333
!define BORDERCOLOR aaa
!define BOXBG ccc
skinparam backgroundColor fff
!endif

'-----------------------------------------------------------------------------
'-----------------------------------------------------------------------------

'******************************************************************************

'-----------------------------------------------------------------------------


'-----------------------------------------------------------------------------
'-----------------------------------------------------------------------------

'******************************************************************************

'-----------------------------------------------------------------------------

!function font_style()
  fontColor PRIMARY
  fontName FONTNAME
  fontSize FONTSIZE
  stereotypeFontColor SECONDARY
  stereotypeFontSize FONTSIZE
!endfunction

!function basic_style()
  backgroundColor BOXBG
  borderColor BORDERCOLOR
!endfunction

!function accent_style()
  backgroundColor ACCENT
  borderColor ACCENTDARK
!endfunction

!function arrow_style()
  arrowColor ARROWCOLOR
  arrowFontName FONTNAME
  arrowFontColor ARROWFONTCOLOR
  arrowFontSize FONTSIZE
!endfunction

' Class diagrams

skinparam circledCharacter {
  radius 8
  fontSize FONTSIZE
  fontName FONTNAME
}

skinparam class {
  basic_style()
  font_style()
  arrow_style()

  attributeFontColor SECONDARY
  attributeFontSize FONTSIZE
  attributeIconSize FONTSIZE
}

' Sequence diagrams

skinparam actor {
  accent_style()
  font_style()
}

skinparam participant {
  basic_style()
  font_style()
}

' Component diagrams

skinparam interface {
  accent_style()
  font_style()
}

skinparam component {
  basic_style()
  font_style()
}

skinparam node {
  basic_style()
  font_style()
}

skinparam database {
  basic_style()
  font_style()
}

skinparam queue {
  basic_style()
  font_style()
}

' Use Case diagrams

skinparam usecase {
  basic_style()
  font_style()
  arrow_style()
}

skinparam activity {
  basic_style()
  font_style()
  arrow_style()
}

skinparam sequence {
  font_style()
  arrow_style()

  lifeLineBorderColor ARROWCOLOR
  lifeLineBackgroundColor ARROWFONTCOLOR
}

skinparam boundary {
  accent_style()
  font_style()
}

skinparam control {
  accent_style()
  font_style()
}

skinparam entity {
  accent_style()
  font_style()
}

' State diagrams

skinparam state {
  basic_style()
  font_style()
  arrow_style()
  startColor ACCENT
  endColor ACCENTDARK
}

' Object diagrams

skinparam object {
  basic_style()
  font_style()
  arrow_style()
}

' Common

skinparam note {
  accent_style()
  font_style()
}

skinparam cloud {
  basic_style()
  font_style()
  arrow_style()
}

skinparam rectangle {
  basic_style()
  font_style()
}

skinparam storage {
  basic_style()
  font_style()
}

@enduml

'-----------------------------------------------------------------------------
'-----------------------------------------------------------------------------

'******************************************************************************

@enduml
